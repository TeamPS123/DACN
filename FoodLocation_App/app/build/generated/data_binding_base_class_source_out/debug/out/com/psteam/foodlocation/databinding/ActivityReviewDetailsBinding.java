// Generated by view binder compiler. Do not edit!
package com.psteam.foodlocation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.button.MaterialButton;
import com.makeramen.roundedimageview.RoundedImageView;
import com.psteam.foodlocation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.relex.circleindicator.CircleIndicator3;

public final class ActivityReviewDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonSendComment;

  @NonNull
  public final CircleIndicator3 circleIndicator;

  @NonNull
  public final ImageView iconHeart;

  @NonNull
  public final ImageView iconHeartLike;

  @NonNull
  public final ImageView iconReport;

  @NonNull
  public final RoundedImageView imageLogoRestaurant;

  @NonNull
  public final RoundedImageView imageViewIconUser;

  @NonNull
  public final EditText inputComment;

  @NonNull
  public final CardView layout1;

  @NonNull
  public final CardView layout2;

  @NonNull
  public final FrameLayout layout3;

  @NonNull
  public final ConstraintLayout layoutComment;

  @NonNull
  public final ConstraintLayout layoutTop;

  @NonNull
  public final RecyclerView recycleViewComment;

  @NonNull
  public final TextView textViewAddress;

  @NonNull
  public final ImageView textViewClose;

  @NonNull
  public final TextView textViewComment;

  @NonNull
  public final TextView textViewContent;

  @NonNull
  public final TextView textViewCountShare;

  @NonNull
  public final TextView textViewDate;

  @NonNull
  public final TextView textViewDistance;

  @NonNull
  public final LinearLayout textViewLike;

  @NonNull
  public final TextView textViewName;

  @NonNull
  public final TextView textViewShare;

  @NonNull
  public final TextView textViewUserFullName;

  @NonNull
  public final TextView textViewUserLike;

  @NonNull
  public final ViewPager2 viewPager;

  @NonNull
  public final View viewSupport;

  @NonNull
  public final View viewSupport1;

  @NonNull
  public final View viewSupport2;

  @NonNull
  public final View viewSupport3;

  private ActivityReviewDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonSendComment, @NonNull CircleIndicator3 circleIndicator,
      @NonNull ImageView iconHeart, @NonNull ImageView iconHeartLike, @NonNull ImageView iconReport,
      @NonNull RoundedImageView imageLogoRestaurant, @NonNull RoundedImageView imageViewIconUser,
      @NonNull EditText inputComment, @NonNull CardView layout1, @NonNull CardView layout2,
      @NonNull FrameLayout layout3, @NonNull ConstraintLayout layoutComment,
      @NonNull ConstraintLayout layoutTop, @NonNull RecyclerView recycleViewComment,
      @NonNull TextView textViewAddress, @NonNull ImageView textViewClose,
      @NonNull TextView textViewComment, @NonNull TextView textViewContent,
      @NonNull TextView textViewCountShare, @NonNull TextView textViewDate,
      @NonNull TextView textViewDistance, @NonNull LinearLayout textViewLike,
      @NonNull TextView textViewName, @NonNull TextView textViewShare,
      @NonNull TextView textViewUserFullName, @NonNull TextView textViewUserLike,
      @NonNull ViewPager2 viewPager, @NonNull View viewSupport, @NonNull View viewSupport1,
      @NonNull View viewSupport2, @NonNull View viewSupport3) {
    this.rootView = rootView;
    this.buttonSendComment = buttonSendComment;
    this.circleIndicator = circleIndicator;
    this.iconHeart = iconHeart;
    this.iconHeartLike = iconHeartLike;
    this.iconReport = iconReport;
    this.imageLogoRestaurant = imageLogoRestaurant;
    this.imageViewIconUser = imageViewIconUser;
    this.inputComment = inputComment;
    this.layout1 = layout1;
    this.layout2 = layout2;
    this.layout3 = layout3;
    this.layoutComment = layoutComment;
    this.layoutTop = layoutTop;
    this.recycleViewComment = recycleViewComment;
    this.textViewAddress = textViewAddress;
    this.textViewClose = textViewClose;
    this.textViewComment = textViewComment;
    this.textViewContent = textViewContent;
    this.textViewCountShare = textViewCountShare;
    this.textViewDate = textViewDate;
    this.textViewDistance = textViewDistance;
    this.textViewLike = textViewLike;
    this.textViewName = textViewName;
    this.textViewShare = textViewShare;
    this.textViewUserFullName = textViewUserFullName;
    this.textViewUserLike = textViewUserLike;
    this.viewPager = viewPager;
    this.viewSupport = viewSupport;
    this.viewSupport1 = viewSupport1;
    this.viewSupport2 = viewSupport2;
    this.viewSupport3 = viewSupport3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReviewDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReviewDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_review_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReviewDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSendComment;
      MaterialButton buttonSendComment = ViewBindings.findChildViewById(rootView, id);
      if (buttonSendComment == null) {
        break missingId;
      }

      id = R.id.circleIndicator;
      CircleIndicator3 circleIndicator = ViewBindings.findChildViewById(rootView, id);
      if (circleIndicator == null) {
        break missingId;
      }

      id = R.id.iconHeart;
      ImageView iconHeart = ViewBindings.findChildViewById(rootView, id);
      if (iconHeart == null) {
        break missingId;
      }

      id = R.id.iconHeartLike;
      ImageView iconHeartLike = ViewBindings.findChildViewById(rootView, id);
      if (iconHeartLike == null) {
        break missingId;
      }

      id = R.id.iconReport;
      ImageView iconReport = ViewBindings.findChildViewById(rootView, id);
      if (iconReport == null) {
        break missingId;
      }

      id = R.id.imageLogoRestaurant;
      RoundedImageView imageLogoRestaurant = ViewBindings.findChildViewById(rootView, id);
      if (imageLogoRestaurant == null) {
        break missingId;
      }

      id = R.id.imageViewIconUser;
      RoundedImageView imageViewIconUser = ViewBindings.findChildViewById(rootView, id);
      if (imageViewIconUser == null) {
        break missingId;
      }

      id = R.id.inputComment;
      EditText inputComment = ViewBindings.findChildViewById(rootView, id);
      if (inputComment == null) {
        break missingId;
      }

      id = R.id.layout1;
      CardView layout1 = ViewBindings.findChildViewById(rootView, id);
      if (layout1 == null) {
        break missingId;
      }

      id = R.id.layout2;
      CardView layout2 = ViewBindings.findChildViewById(rootView, id);
      if (layout2 == null) {
        break missingId;
      }

      id = R.id.layout3;
      FrameLayout layout3 = ViewBindings.findChildViewById(rootView, id);
      if (layout3 == null) {
        break missingId;
      }

      id = R.id.layoutComment;
      ConstraintLayout layoutComment = ViewBindings.findChildViewById(rootView, id);
      if (layoutComment == null) {
        break missingId;
      }

      id = R.id.layoutTop;
      ConstraintLayout layoutTop = ViewBindings.findChildViewById(rootView, id);
      if (layoutTop == null) {
        break missingId;
      }

      id = R.id.recycleViewComment;
      RecyclerView recycleViewComment = ViewBindings.findChildViewById(rootView, id);
      if (recycleViewComment == null) {
        break missingId;
      }

      id = R.id.textViewAddress;
      TextView textViewAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddress == null) {
        break missingId;
      }

      id = R.id.textViewClose;
      ImageView textViewClose = ViewBindings.findChildViewById(rootView, id);
      if (textViewClose == null) {
        break missingId;
      }

      id = R.id.textViewComment;
      TextView textViewComment = ViewBindings.findChildViewById(rootView, id);
      if (textViewComment == null) {
        break missingId;
      }

      id = R.id.textViewContent;
      TextView textViewContent = ViewBindings.findChildViewById(rootView, id);
      if (textViewContent == null) {
        break missingId;
      }

      id = R.id.textViewCountShare;
      TextView textViewCountShare = ViewBindings.findChildViewById(rootView, id);
      if (textViewCountShare == null) {
        break missingId;
      }

      id = R.id.textViewDate;
      TextView textViewDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewDate == null) {
        break missingId;
      }

      id = R.id.textViewDistance;
      TextView textViewDistance = ViewBindings.findChildViewById(rootView, id);
      if (textViewDistance == null) {
        break missingId;
      }

      id = R.id.textViewLike;
      LinearLayout textViewLike = ViewBindings.findChildViewById(rootView, id);
      if (textViewLike == null) {
        break missingId;
      }

      id = R.id.textViewName;
      TextView textViewName = ViewBindings.findChildViewById(rootView, id);
      if (textViewName == null) {
        break missingId;
      }

      id = R.id.textViewShare;
      TextView textViewShare = ViewBindings.findChildViewById(rootView, id);
      if (textViewShare == null) {
        break missingId;
      }

      id = R.id.textViewUserFullName;
      TextView textViewUserFullName = ViewBindings.findChildViewById(rootView, id);
      if (textViewUserFullName == null) {
        break missingId;
      }

      id = R.id.textViewUserLike;
      TextView textViewUserLike = ViewBindings.findChildViewById(rootView, id);
      if (textViewUserLike == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      id = R.id.viewSupport;
      View viewSupport = ViewBindings.findChildViewById(rootView, id);
      if (viewSupport == null) {
        break missingId;
      }

      id = R.id.viewSupport1;
      View viewSupport1 = ViewBindings.findChildViewById(rootView, id);
      if (viewSupport1 == null) {
        break missingId;
      }

      id = R.id.viewSupport2;
      View viewSupport2 = ViewBindings.findChildViewById(rootView, id);
      if (viewSupport2 == null) {
        break missingId;
      }

      id = R.id.viewSupport3;
      View viewSupport3 = ViewBindings.findChildViewById(rootView, id);
      if (viewSupport3 == null) {
        break missingId;
      }

      return new ActivityReviewDetailsBinding((ConstraintLayout) rootView, buttonSendComment,
          circleIndicator, iconHeart, iconHeartLike, iconReport, imageLogoRestaurant,
          imageViewIconUser, inputComment, layout1, layout2, layout3, layoutComment, layoutTop,
          recycleViewComment, textViewAddress, textViewClose, textViewComment, textViewContent,
          textViewCountShare, textViewDate, textViewDistance, textViewLike, textViewName,
          textViewShare, textViewUserFullName, textViewUserLike, viewPager, viewSupport,
          viewSupport1, viewSupport2, viewSupport3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
