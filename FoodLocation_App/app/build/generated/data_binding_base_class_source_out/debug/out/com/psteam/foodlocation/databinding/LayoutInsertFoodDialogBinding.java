// Generated by view binder compiler. Do not edit!
package com.psteam.foodlocation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.jaredrummler.materialspinner.MaterialSpinner;
import com.psteam.foodlocation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.relex.circleindicator.CircleIndicator2;

public final class LayoutInsertFoodDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView buttonAddCategory;

  @NonNull
  public final MaterialButton buttonAddImageFood;

  @NonNull
  public final MaterialButton buttonAddMenu;

  @NonNull
  public final MaterialButton buttonBack;

  @NonNull
  public final CircleIndicator2 circleIndicator;

  @NonNull
  public final ImageView imageIconCity;

  @NonNull
  public final EditText inputFoodName;

  @NonNull
  public final EditText inputPreice;

  @NonNull
  public final EditText inputUnit;

  @NonNull
  public final LinearLayout layout2;

  @NonNull
  public final LinearLayout layout3;

  @NonNull
  public final LinearLayout layout4;

  @NonNull
  public final RecyclerView recycleView;

  @NonNull
  public final MaterialSpinner spinnerCategory;

  @NonNull
  public final TextView text1;

  private LayoutInsertFoodDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView buttonAddCategory, @NonNull MaterialButton buttonAddImageFood,
      @NonNull MaterialButton buttonAddMenu, @NonNull MaterialButton buttonBack,
      @NonNull CircleIndicator2 circleIndicator, @NonNull ImageView imageIconCity,
      @NonNull EditText inputFoodName, @NonNull EditText inputPreice, @NonNull EditText inputUnit,
      @NonNull LinearLayout layout2, @NonNull LinearLayout layout3, @NonNull LinearLayout layout4,
      @NonNull RecyclerView recycleView, @NonNull MaterialSpinner spinnerCategory,
      @NonNull TextView text1) {
    this.rootView = rootView;
    this.buttonAddCategory = buttonAddCategory;
    this.buttonAddImageFood = buttonAddImageFood;
    this.buttonAddMenu = buttonAddMenu;
    this.buttonBack = buttonBack;
    this.circleIndicator = circleIndicator;
    this.imageIconCity = imageIconCity;
    this.inputFoodName = inputFoodName;
    this.inputPreice = inputPreice;
    this.inputUnit = inputUnit;
    this.layout2 = layout2;
    this.layout3 = layout3;
    this.layout4 = layout4;
    this.recycleView = recycleView;
    this.spinnerCategory = spinnerCategory;
    this.text1 = text1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutInsertFoodDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutInsertFoodDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_insert_food_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutInsertFoodDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddCategory;
      ImageView buttonAddCategory = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddCategory == null) {
        break missingId;
      }

      id = R.id.buttonAddImageFood;
      MaterialButton buttonAddImageFood = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddImageFood == null) {
        break missingId;
      }

      id = R.id.buttonAddMenu;
      MaterialButton buttonAddMenu = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddMenu == null) {
        break missingId;
      }

      id = R.id.buttonBack;
      MaterialButton buttonBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.circleIndicator;
      CircleIndicator2 circleIndicator = ViewBindings.findChildViewById(rootView, id);
      if (circleIndicator == null) {
        break missingId;
      }

      id = R.id.imageIconCity;
      ImageView imageIconCity = ViewBindings.findChildViewById(rootView, id);
      if (imageIconCity == null) {
        break missingId;
      }

      id = R.id.inputFoodName;
      EditText inputFoodName = ViewBindings.findChildViewById(rootView, id);
      if (inputFoodName == null) {
        break missingId;
      }

      id = R.id.inputPreice;
      EditText inputPreice = ViewBindings.findChildViewById(rootView, id);
      if (inputPreice == null) {
        break missingId;
      }

      id = R.id.inputUnit;
      EditText inputUnit = ViewBindings.findChildViewById(rootView, id);
      if (inputUnit == null) {
        break missingId;
      }

      id = R.id.layout2;
      LinearLayout layout2 = ViewBindings.findChildViewById(rootView, id);
      if (layout2 == null) {
        break missingId;
      }

      id = R.id.layout3;
      LinearLayout layout3 = ViewBindings.findChildViewById(rootView, id);
      if (layout3 == null) {
        break missingId;
      }

      id = R.id.layout4;
      LinearLayout layout4 = ViewBindings.findChildViewById(rootView, id);
      if (layout4 == null) {
        break missingId;
      }

      id = R.id.recycleView;
      RecyclerView recycleView = ViewBindings.findChildViewById(rootView, id);
      if (recycleView == null) {
        break missingId;
      }

      id = R.id.spinnerCategory;
      MaterialSpinner spinnerCategory = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCategory == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      return new LayoutInsertFoodDialogBinding((ConstraintLayout) rootView, buttonAddCategory,
          buttonAddImageFood, buttonAddMenu, buttonBack, circleIndicator, imageIconCity,
          inputFoodName, inputPreice, inputUnit, layout2, layout3, layout4, recycleView,
          spinnerCategory, text1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
