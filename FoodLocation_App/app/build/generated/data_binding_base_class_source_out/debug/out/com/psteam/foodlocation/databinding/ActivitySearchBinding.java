// Generated by view binder compiler. Do not edit!
package com.psteam.foodlocation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.makeramen.roundedimageview.RoundedImageView;
import com.psteam.foodlocation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RoundedImageView buttonMap;

  @NonNull
  public final RoundedImageView iconClose;

  @NonNull
  public final ImageView imageViewMic;

  @NonNull
  public final EditText inputSearch;

  @NonNull
  public final LinearLayout layoutBottom;

  @NonNull
  public final LinearLayout layoutSearch;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recycleViewSearch;

  @NonNull
  public final TextView textViewNoFind;

  @NonNull
  public final TextView textviewCategory;

  @NonNull
  public final TextView textviewDistrict;

  @NonNull
  public final TextView textviewSort;

  private ActivitySearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull RoundedImageView buttonMap, @NonNull RoundedImageView iconClose,
      @NonNull ImageView imageViewMic, @NonNull EditText inputSearch,
      @NonNull LinearLayout layoutBottom, @NonNull LinearLayout layoutSearch,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView recycleViewSearch,
      @NonNull TextView textViewNoFind, @NonNull TextView textviewCategory,
      @NonNull TextView textviewDistrict, @NonNull TextView textviewSort) {
    this.rootView = rootView;
    this.buttonMap = buttonMap;
    this.iconClose = iconClose;
    this.imageViewMic = imageViewMic;
    this.inputSearch = inputSearch;
    this.layoutBottom = layoutBottom;
    this.layoutSearch = layoutSearch;
    this.progressBar = progressBar;
    this.recycleViewSearch = recycleViewSearch;
    this.textViewNoFind = textViewNoFind;
    this.textviewCategory = textviewCategory;
    this.textviewDistrict = textviewDistrict;
    this.textviewSort = textviewSort;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonMap;
      RoundedImageView buttonMap = ViewBindings.findChildViewById(rootView, id);
      if (buttonMap == null) {
        break missingId;
      }

      id = R.id.iconClose;
      RoundedImageView iconClose = ViewBindings.findChildViewById(rootView, id);
      if (iconClose == null) {
        break missingId;
      }

      id = R.id.imageViewMic;
      ImageView imageViewMic = ViewBindings.findChildViewById(rootView, id);
      if (imageViewMic == null) {
        break missingId;
      }

      id = R.id.inputSearch;
      EditText inputSearch = ViewBindings.findChildViewById(rootView, id);
      if (inputSearch == null) {
        break missingId;
      }

      id = R.id.layoutBottom;
      LinearLayout layoutBottom = ViewBindings.findChildViewById(rootView, id);
      if (layoutBottom == null) {
        break missingId;
      }

      id = R.id.layoutSearch;
      LinearLayout layoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (layoutSearch == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recycleViewSearch;
      RecyclerView recycleViewSearch = ViewBindings.findChildViewById(rootView, id);
      if (recycleViewSearch == null) {
        break missingId;
      }

      id = R.id.textViewNoFind;
      TextView textViewNoFind = ViewBindings.findChildViewById(rootView, id);
      if (textViewNoFind == null) {
        break missingId;
      }

      id = R.id.textviewCategory;
      TextView textviewCategory = ViewBindings.findChildViewById(rootView, id);
      if (textviewCategory == null) {
        break missingId;
      }

      id = R.id.textviewDistrict;
      TextView textviewDistrict = ViewBindings.findChildViewById(rootView, id);
      if (textviewDistrict == null) {
        break missingId;
      }

      id = R.id.textviewSort;
      TextView textviewSort = ViewBindings.findChildViewById(rootView, id);
      if (textviewSort == null) {
        break missingId;
      }

      return new ActivitySearchBinding((ConstraintLayout) rootView, buttonMap, iconClose,
          imageViewMic, inputSearch, layoutBottom, layoutSearch, progressBar, recycleViewSearch,
          textViewNoFind, textviewCategory, textviewDistrict, textviewSort);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
