// Generated by view binder compiler. Do not edit!
package com.psteam.foodlocation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.psteam.foodlocation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReviewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonSendReview;

  @NonNull
  public final TextInputEditText inputContent;

  @NonNull
  public final TextInputLayout layout2;

  @NonNull
  public final LinearLayout layoutAddPhoto;

  @NonNull
  public final ConstraintLayout layoutTop;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final RecyclerView recycleView;

  @NonNull
  public final TextView text1;

  @NonNull
  public final TextView text11;

  @NonNull
  public final ImageView textViewClose;

  @NonNull
  public final TextView textViewRestaurantName;

  private ActivityReviewBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton buttonSendReview, @NonNull TextInputEditText inputContent,
      @NonNull TextInputLayout layout2, @NonNull LinearLayout layoutAddPhoto,
      @NonNull ConstraintLayout layoutTop, @NonNull RatingBar ratingBar,
      @NonNull RecyclerView recycleView, @NonNull TextView text1, @NonNull TextView text11,
      @NonNull ImageView textViewClose, @NonNull TextView textViewRestaurantName) {
    this.rootView = rootView;
    this.buttonSendReview = buttonSendReview;
    this.inputContent = inputContent;
    this.layout2 = layout2;
    this.layoutAddPhoto = layoutAddPhoto;
    this.layoutTop = layoutTop;
    this.ratingBar = ratingBar;
    this.recycleView = recycleView;
    this.text1 = text1;
    this.text11 = text11;
    this.textViewClose = textViewClose;
    this.textViewRestaurantName = textViewRestaurantName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_review, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSendReview;
      MaterialButton buttonSendReview = ViewBindings.findChildViewById(rootView, id);
      if (buttonSendReview == null) {
        break missingId;
      }

      id = R.id.inputContent;
      TextInputEditText inputContent = ViewBindings.findChildViewById(rootView, id);
      if (inputContent == null) {
        break missingId;
      }

      id = R.id.layout2;
      TextInputLayout layout2 = ViewBindings.findChildViewById(rootView, id);
      if (layout2 == null) {
        break missingId;
      }

      id = R.id.layoutAddPhoto;
      LinearLayout layoutAddPhoto = ViewBindings.findChildViewById(rootView, id);
      if (layoutAddPhoto == null) {
        break missingId;
      }

      id = R.id.layoutTop;
      ConstraintLayout layoutTop = ViewBindings.findChildViewById(rootView, id);
      if (layoutTop == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.recycleView;
      RecyclerView recycleView = ViewBindings.findChildViewById(rootView, id);
      if (recycleView == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.text11;
      TextView text11 = ViewBindings.findChildViewById(rootView, id);
      if (text11 == null) {
        break missingId;
      }

      id = R.id.textViewClose;
      ImageView textViewClose = ViewBindings.findChildViewById(rootView, id);
      if (textViewClose == null) {
        break missingId;
      }

      id = R.id.textViewRestaurantName;
      TextView textViewRestaurantName = ViewBindings.findChildViewById(rootView, id);
      if (textViewRestaurantName == null) {
        break missingId;
      }

      return new ActivityReviewBinding((LinearLayout) rootView, buttonSendReview, inputContent,
          layout2, layoutAddPhoto, layoutTop, ratingBar, recycleView, text1, text11, textViewClose,
          textViewRestaurantName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
