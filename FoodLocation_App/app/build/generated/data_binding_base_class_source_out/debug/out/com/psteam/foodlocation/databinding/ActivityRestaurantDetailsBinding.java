// Generated by view binder compiler. Do not edit!
package com.psteam.foodlocation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatRatingBar;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.button.MaterialButton;
import com.makeramen.roundedimageview.RoundedImageView;
import com.psteam.foodlocation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.relex.circleindicator.CircleIndicator3;

public final class ActivityRestaurantDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonReserve;

  @NonNull
  public final CircleIndicator3 circleIndicator;

  @NonNull
  public final RoundedImageView imageViewRestaurant;

  @NonNull
  public final ConstraintLayout layout1;

  @NonNull
  public final LinearLayout layout10;

  @NonNull
  public final ConstraintLayout layout11;

  @NonNull
  public final LinearLayout layout12;

  @NonNull
  public final LinearLayout layout2;

  @NonNull
  public final ConstraintLayout layout3;

  @NonNull
  public final LinearLayout layout4;

  @NonNull
  public final ConstraintLayout layout5;

  @NonNull
  public final LinearLayout layout6;

  @NonNull
  public final ConstraintLayout layout7;

  @NonNull
  public final LinearLayout layout8;

  @NonNull
  public final ConstraintLayout layout9;

  @NonNull
  public final LinearLayout layoutAddress;

  @NonNull
  public final LinearLayout layoutCall;

  @NonNull
  public final LinearLayout layoutCopyShareLink;

  @NonNull
  public final LinearLayout layoutDirection;

  @NonNull
  public final CardView layoutFollow;

  @NonNull
  public final ConstraintLayout layoutMain;

  @NonNull
  public final RestaurantMapAddressBinding layoutMap;

  @NonNull
  public final CardView layoutRestaurantDetail;

  @NonNull
  public final LinearLayout layoutShareFacebook;

  @NonNull
  public final LinearLayout layoutShareMessenger;

  @NonNull
  public final LinearLayout layoutShareOther;

  @NonNull
  public final ConstraintLayout layoutTop;

  @NonNull
  public final TextView line1;

  @NonNull
  public final TextView line2;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final AppCompatRatingBar ratingBar;

  @NonNull
  public final RatingBar ratingBarTotalValue;

  @NonNull
  public final RecyclerView recycleViewPostFoodRestaurant;

  @NonNull
  public final RecyclerView recycleViewReview;

  @NonNull
  public final RecyclerView recycleViewTimeBookTable;

  @NonNull
  public final TextView reportRes;

  @NonNull
  public final TextView text1;

  @NonNull
  public final TextView text11;

  @NonNull
  public final TextView textRestaurantName;

  @NonNull
  public final TextView textTitle;

  @NonNull
  public final TextView textTotalRate;

  @NonNull
  public final TextView textViewAddress;

  @NonNull
  public final TextView textViewCall;

  @NonNull
  public final TextView textViewCategory;

  @NonNull
  public final TextView textViewCategoryRestaurant;

  @NonNull
  public final TextView textViewChooseAddress;

  @NonNull
  public final TextView textViewChooseDate;

  @NonNull
  public final TextView textViewChooseDistance;

  @NonNull
  public final TextView textViewChoosePersonNumber;

  @NonNull
  public final ImageView textViewClose;

  @NonNull
  public final TextView textViewCountBookTable;

  @NonNull
  public final TextView textViewCountBookTableTextAfter;

  @NonNull
  public final TextView textViewCountBookTableTextBefore;

  @NonNull
  public final TextView textViewDirections;

  @NonNull
  public final TextView textViewDistance;

  @NonNull
  public final TextView textViewFollow;

  @NonNull
  public final RoundedImageView textViewImageLogoRestaurant;

  @NonNull
  public final TextView textViewPromotion;

  @NonNull
  public final TextView textViewPromotionForm;

  @NonNull
  public final TextView textViewRatingValue;

  @NonNull
  public final TextView textViewReadMore;

  @NonNull
  public final TextView textViewReadMoreRestaurantsText;

  @NonNull
  public final TextView textViewRestaurantDetail;

  @NonNull
  public final TextView textViewRestaurantDetails;

  @NonNull
  public final TextView textViewRestaurantName;

  @NonNull
  public final TextView textViewRestaurantNameDetails;

  @NonNull
  public final TextView textViewReviewCount;

  @NonNull
  public final TextView textViewTotalCountReview;

  @NonNull
  public final TextView textViewViewMoreReview;

  @NonNull
  public final ViewPager2 viewPagerSlideImageRestaurant;

  private ActivityRestaurantDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton buttonReserve, @NonNull CircleIndicator3 circleIndicator,
      @NonNull RoundedImageView imageViewRestaurant, @NonNull ConstraintLayout layout1,
      @NonNull LinearLayout layout10, @NonNull ConstraintLayout layout11,
      @NonNull LinearLayout layout12, @NonNull LinearLayout layout2,
      @NonNull ConstraintLayout layout3, @NonNull LinearLayout layout4,
      @NonNull ConstraintLayout layout5, @NonNull LinearLayout layout6,
      @NonNull ConstraintLayout layout7, @NonNull LinearLayout layout8,
      @NonNull ConstraintLayout layout9, @NonNull LinearLayout layoutAddress,
      @NonNull LinearLayout layoutCall, @NonNull LinearLayout layoutCopyShareLink,
      @NonNull LinearLayout layoutDirection, @NonNull CardView layoutFollow,
      @NonNull ConstraintLayout layoutMain, @NonNull RestaurantMapAddressBinding layoutMap,
      @NonNull CardView layoutRestaurantDetail, @NonNull LinearLayout layoutShareFacebook,
      @NonNull LinearLayout layoutShareMessenger, @NonNull LinearLayout layoutShareOther,
      @NonNull ConstraintLayout layoutTop, @NonNull TextView line1, @NonNull TextView line2,
      @NonNull NestedScrollView nestedScrollView, @NonNull AppCompatRatingBar ratingBar,
      @NonNull RatingBar ratingBarTotalValue, @NonNull RecyclerView recycleViewPostFoodRestaurant,
      @NonNull RecyclerView recycleViewReview, @NonNull RecyclerView recycleViewTimeBookTable,
      @NonNull TextView reportRes, @NonNull TextView text1, @NonNull TextView text11,
      @NonNull TextView textRestaurantName, @NonNull TextView textTitle,
      @NonNull TextView textTotalRate, @NonNull TextView textViewAddress,
      @NonNull TextView textViewCall, @NonNull TextView textViewCategory,
      @NonNull TextView textViewCategoryRestaurant, @NonNull TextView textViewChooseAddress,
      @NonNull TextView textViewChooseDate, @NonNull TextView textViewChooseDistance,
      @NonNull TextView textViewChoosePersonNumber, @NonNull ImageView textViewClose,
      @NonNull TextView textViewCountBookTable, @NonNull TextView textViewCountBookTableTextAfter,
      @NonNull TextView textViewCountBookTableTextBefore, @NonNull TextView textViewDirections,
      @NonNull TextView textViewDistance, @NonNull TextView textViewFollow,
      @NonNull RoundedImageView textViewImageLogoRestaurant, @NonNull TextView textViewPromotion,
      @NonNull TextView textViewPromotionForm, @NonNull TextView textViewRatingValue,
      @NonNull TextView textViewReadMore, @NonNull TextView textViewReadMoreRestaurantsText,
      @NonNull TextView textViewRestaurantDetail, @NonNull TextView textViewRestaurantDetails,
      @NonNull TextView textViewRestaurantName, @NonNull TextView textViewRestaurantNameDetails,
      @NonNull TextView textViewReviewCount, @NonNull TextView textViewTotalCountReview,
      @NonNull TextView textViewViewMoreReview, @NonNull ViewPager2 viewPagerSlideImageRestaurant) {
    this.rootView = rootView;
    this.buttonReserve = buttonReserve;
    this.circleIndicator = circleIndicator;
    this.imageViewRestaurant = imageViewRestaurant;
    this.layout1 = layout1;
    this.layout10 = layout10;
    this.layout11 = layout11;
    this.layout12 = layout12;
    this.layout2 = layout2;
    this.layout3 = layout3;
    this.layout4 = layout4;
    this.layout5 = layout5;
    this.layout6 = layout6;
    this.layout7 = layout7;
    this.layout8 = layout8;
    this.layout9 = layout9;
    this.layoutAddress = layoutAddress;
    this.layoutCall = layoutCall;
    this.layoutCopyShareLink = layoutCopyShareLink;
    this.layoutDirection = layoutDirection;
    this.layoutFollow = layoutFollow;
    this.layoutMain = layoutMain;
    this.layoutMap = layoutMap;
    this.layoutRestaurantDetail = layoutRestaurantDetail;
    this.layoutShareFacebook = layoutShareFacebook;
    this.layoutShareMessenger = layoutShareMessenger;
    this.layoutShareOther = layoutShareOther;
    this.layoutTop = layoutTop;
    this.line1 = line1;
    this.line2 = line2;
    this.nestedScrollView = nestedScrollView;
    this.ratingBar = ratingBar;
    this.ratingBarTotalValue = ratingBarTotalValue;
    this.recycleViewPostFoodRestaurant = recycleViewPostFoodRestaurant;
    this.recycleViewReview = recycleViewReview;
    this.recycleViewTimeBookTable = recycleViewTimeBookTable;
    this.reportRes = reportRes;
    this.text1 = text1;
    this.text11 = text11;
    this.textRestaurantName = textRestaurantName;
    this.textTitle = textTitle;
    this.textTotalRate = textTotalRate;
    this.textViewAddress = textViewAddress;
    this.textViewCall = textViewCall;
    this.textViewCategory = textViewCategory;
    this.textViewCategoryRestaurant = textViewCategoryRestaurant;
    this.textViewChooseAddress = textViewChooseAddress;
    this.textViewChooseDate = textViewChooseDate;
    this.textViewChooseDistance = textViewChooseDistance;
    this.textViewChoosePersonNumber = textViewChoosePersonNumber;
    this.textViewClose = textViewClose;
    this.textViewCountBookTable = textViewCountBookTable;
    this.textViewCountBookTableTextAfter = textViewCountBookTableTextAfter;
    this.textViewCountBookTableTextBefore = textViewCountBookTableTextBefore;
    this.textViewDirections = textViewDirections;
    this.textViewDistance = textViewDistance;
    this.textViewFollow = textViewFollow;
    this.textViewImageLogoRestaurant = textViewImageLogoRestaurant;
    this.textViewPromotion = textViewPromotion;
    this.textViewPromotionForm = textViewPromotionForm;
    this.textViewRatingValue = textViewRatingValue;
    this.textViewReadMore = textViewReadMore;
    this.textViewReadMoreRestaurantsText = textViewReadMoreRestaurantsText;
    this.textViewRestaurantDetail = textViewRestaurantDetail;
    this.textViewRestaurantDetails = textViewRestaurantDetails;
    this.textViewRestaurantName = textViewRestaurantName;
    this.textViewRestaurantNameDetails = textViewRestaurantNameDetails;
    this.textViewReviewCount = textViewReviewCount;
    this.textViewTotalCountReview = textViewTotalCountReview;
    this.textViewViewMoreReview = textViewViewMoreReview;
    this.viewPagerSlideImageRestaurant = viewPagerSlideImageRestaurant;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRestaurantDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRestaurantDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_restaurant_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRestaurantDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonReserve;
      MaterialButton buttonReserve = ViewBindings.findChildViewById(rootView, id);
      if (buttonReserve == null) {
        break missingId;
      }

      id = R.id.circleIndicator;
      CircleIndicator3 circleIndicator = ViewBindings.findChildViewById(rootView, id);
      if (circleIndicator == null) {
        break missingId;
      }

      id = R.id.imageViewRestaurant;
      RoundedImageView imageViewRestaurant = ViewBindings.findChildViewById(rootView, id);
      if (imageViewRestaurant == null) {
        break missingId;
      }

      id = R.id.layout1;
      ConstraintLayout layout1 = ViewBindings.findChildViewById(rootView, id);
      if (layout1 == null) {
        break missingId;
      }

      id = R.id.layout10;
      LinearLayout layout10 = ViewBindings.findChildViewById(rootView, id);
      if (layout10 == null) {
        break missingId;
      }

      id = R.id.layout11;
      ConstraintLayout layout11 = ViewBindings.findChildViewById(rootView, id);
      if (layout11 == null) {
        break missingId;
      }

      id = R.id.layout12;
      LinearLayout layout12 = ViewBindings.findChildViewById(rootView, id);
      if (layout12 == null) {
        break missingId;
      }

      id = R.id.layout2;
      LinearLayout layout2 = ViewBindings.findChildViewById(rootView, id);
      if (layout2 == null) {
        break missingId;
      }

      id = R.id.layout3;
      ConstraintLayout layout3 = ViewBindings.findChildViewById(rootView, id);
      if (layout3 == null) {
        break missingId;
      }

      id = R.id.layout4;
      LinearLayout layout4 = ViewBindings.findChildViewById(rootView, id);
      if (layout4 == null) {
        break missingId;
      }

      id = R.id.layout5;
      ConstraintLayout layout5 = ViewBindings.findChildViewById(rootView, id);
      if (layout5 == null) {
        break missingId;
      }

      id = R.id.layout6;
      LinearLayout layout6 = ViewBindings.findChildViewById(rootView, id);
      if (layout6 == null) {
        break missingId;
      }

      id = R.id.layout7;
      ConstraintLayout layout7 = ViewBindings.findChildViewById(rootView, id);
      if (layout7 == null) {
        break missingId;
      }

      id = R.id.layout8;
      LinearLayout layout8 = ViewBindings.findChildViewById(rootView, id);
      if (layout8 == null) {
        break missingId;
      }

      id = R.id.layout9;
      ConstraintLayout layout9 = ViewBindings.findChildViewById(rootView, id);
      if (layout9 == null) {
        break missingId;
      }

      id = R.id.layoutAddress;
      LinearLayout layoutAddress = ViewBindings.findChildViewById(rootView, id);
      if (layoutAddress == null) {
        break missingId;
      }

      id = R.id.layoutCall;
      LinearLayout layoutCall = ViewBindings.findChildViewById(rootView, id);
      if (layoutCall == null) {
        break missingId;
      }

      id = R.id.layoutCopyShareLink;
      LinearLayout layoutCopyShareLink = ViewBindings.findChildViewById(rootView, id);
      if (layoutCopyShareLink == null) {
        break missingId;
      }

      id = R.id.layoutDirection;
      LinearLayout layoutDirection = ViewBindings.findChildViewById(rootView, id);
      if (layoutDirection == null) {
        break missingId;
      }

      id = R.id.layoutFollow;
      CardView layoutFollow = ViewBindings.findChildViewById(rootView, id);
      if (layoutFollow == null) {
        break missingId;
      }

      id = R.id.layoutMain;
      ConstraintLayout layoutMain = ViewBindings.findChildViewById(rootView, id);
      if (layoutMain == null) {
        break missingId;
      }

      id = R.id.layoutMap;
      View layoutMap = ViewBindings.findChildViewById(rootView, id);
      if (layoutMap == null) {
        break missingId;
      }
      RestaurantMapAddressBinding binding_layoutMap = RestaurantMapAddressBinding.bind(layoutMap);

      id = R.id.layoutRestaurantDetail;
      CardView layoutRestaurantDetail = ViewBindings.findChildViewById(rootView, id);
      if (layoutRestaurantDetail == null) {
        break missingId;
      }

      id = R.id.layoutShareFacebook;
      LinearLayout layoutShareFacebook = ViewBindings.findChildViewById(rootView, id);
      if (layoutShareFacebook == null) {
        break missingId;
      }

      id = R.id.layoutShareMessenger;
      LinearLayout layoutShareMessenger = ViewBindings.findChildViewById(rootView, id);
      if (layoutShareMessenger == null) {
        break missingId;
      }

      id = R.id.layoutShareOther;
      LinearLayout layoutShareOther = ViewBindings.findChildViewById(rootView, id);
      if (layoutShareOther == null) {
        break missingId;
      }

      id = R.id.layoutTop;
      ConstraintLayout layoutTop = ViewBindings.findChildViewById(rootView, id);
      if (layoutTop == null) {
        break missingId;
      }

      id = R.id.line1;
      TextView line1 = ViewBindings.findChildViewById(rootView, id);
      if (line1 == null) {
        break missingId;
      }

      id = R.id.line2;
      TextView line2 = ViewBindings.findChildViewById(rootView, id);
      if (line2 == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      AppCompatRatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.ratingBarTotalValue;
      RatingBar ratingBarTotalValue = ViewBindings.findChildViewById(rootView, id);
      if (ratingBarTotalValue == null) {
        break missingId;
      }

      id = R.id.recycleViewPostFoodRestaurant;
      RecyclerView recycleViewPostFoodRestaurant = ViewBindings.findChildViewById(rootView, id);
      if (recycleViewPostFoodRestaurant == null) {
        break missingId;
      }

      id = R.id.recycleViewReview;
      RecyclerView recycleViewReview = ViewBindings.findChildViewById(rootView, id);
      if (recycleViewReview == null) {
        break missingId;
      }

      id = R.id.recycleViewTimeBookTable;
      RecyclerView recycleViewTimeBookTable = ViewBindings.findChildViewById(rootView, id);
      if (recycleViewTimeBookTable == null) {
        break missingId;
      }

      id = R.id.reportRes;
      TextView reportRes = ViewBindings.findChildViewById(rootView, id);
      if (reportRes == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.text11;
      TextView text11 = ViewBindings.findChildViewById(rootView, id);
      if (text11 == null) {
        break missingId;
      }

      id = R.id.textRestaurantName;
      TextView textRestaurantName = ViewBindings.findChildViewById(rootView, id);
      if (textRestaurantName == null) {
        break missingId;
      }

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      id = R.id.textTotalRate;
      TextView textTotalRate = ViewBindings.findChildViewById(rootView, id);
      if (textTotalRate == null) {
        break missingId;
      }

      id = R.id.textViewAddress;
      TextView textViewAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddress == null) {
        break missingId;
      }

      id = R.id.textViewCall;
      TextView textViewCall = ViewBindings.findChildViewById(rootView, id);
      if (textViewCall == null) {
        break missingId;
      }

      id = R.id.textViewCategory;
      TextView textViewCategory = ViewBindings.findChildViewById(rootView, id);
      if (textViewCategory == null) {
        break missingId;
      }

      id = R.id.textViewCategoryRestaurant;
      TextView textViewCategoryRestaurant = ViewBindings.findChildViewById(rootView, id);
      if (textViewCategoryRestaurant == null) {
        break missingId;
      }

      id = R.id.textViewChooseAddress;
      TextView textViewChooseAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewChooseAddress == null) {
        break missingId;
      }

      id = R.id.textViewChooseDate;
      TextView textViewChooseDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewChooseDate == null) {
        break missingId;
      }

      id = R.id.textViewChooseDistance;
      TextView textViewChooseDistance = ViewBindings.findChildViewById(rootView, id);
      if (textViewChooseDistance == null) {
        break missingId;
      }

      id = R.id.textViewChoosePersonNumber;
      TextView textViewChoosePersonNumber = ViewBindings.findChildViewById(rootView, id);
      if (textViewChoosePersonNumber == null) {
        break missingId;
      }

      id = R.id.textViewClose;
      ImageView textViewClose = ViewBindings.findChildViewById(rootView, id);
      if (textViewClose == null) {
        break missingId;
      }

      id = R.id.textViewCountBookTable;
      TextView textViewCountBookTable = ViewBindings.findChildViewById(rootView, id);
      if (textViewCountBookTable == null) {
        break missingId;
      }

      id = R.id.textViewCountBookTableTextAfter;
      TextView textViewCountBookTableTextAfter = ViewBindings.findChildViewById(rootView, id);
      if (textViewCountBookTableTextAfter == null) {
        break missingId;
      }

      id = R.id.textViewCountBookTableTextBefore;
      TextView textViewCountBookTableTextBefore = ViewBindings.findChildViewById(rootView, id);
      if (textViewCountBookTableTextBefore == null) {
        break missingId;
      }

      id = R.id.textViewDirections;
      TextView textViewDirections = ViewBindings.findChildViewById(rootView, id);
      if (textViewDirections == null) {
        break missingId;
      }

      id = R.id.textViewDistance;
      TextView textViewDistance = ViewBindings.findChildViewById(rootView, id);
      if (textViewDistance == null) {
        break missingId;
      }

      id = R.id.textViewFollow;
      TextView textViewFollow = ViewBindings.findChildViewById(rootView, id);
      if (textViewFollow == null) {
        break missingId;
      }

      id = R.id.textViewImageLogoRestaurant;
      RoundedImageView textViewImageLogoRestaurant = ViewBindings.findChildViewById(rootView, id);
      if (textViewImageLogoRestaurant == null) {
        break missingId;
      }

      id = R.id.textViewPromotion;
      TextView textViewPromotion = ViewBindings.findChildViewById(rootView, id);
      if (textViewPromotion == null) {
        break missingId;
      }

      id = R.id.textViewPromotionForm;
      TextView textViewPromotionForm = ViewBindings.findChildViewById(rootView, id);
      if (textViewPromotionForm == null) {
        break missingId;
      }

      id = R.id.textViewRatingValue;
      TextView textViewRatingValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewRatingValue == null) {
        break missingId;
      }

      id = R.id.textViewReadMore;
      TextView textViewReadMore = ViewBindings.findChildViewById(rootView, id);
      if (textViewReadMore == null) {
        break missingId;
      }

      id = R.id.textViewReadMoreRestaurantsText;
      TextView textViewReadMoreRestaurantsText = ViewBindings.findChildViewById(rootView, id);
      if (textViewReadMoreRestaurantsText == null) {
        break missingId;
      }

      id = R.id.textViewRestaurantDetail;
      TextView textViewRestaurantDetail = ViewBindings.findChildViewById(rootView, id);
      if (textViewRestaurantDetail == null) {
        break missingId;
      }

      id = R.id.textViewRestaurantDetails;
      TextView textViewRestaurantDetails = ViewBindings.findChildViewById(rootView, id);
      if (textViewRestaurantDetails == null) {
        break missingId;
      }

      id = R.id.textViewRestaurantName;
      TextView textViewRestaurantName = ViewBindings.findChildViewById(rootView, id);
      if (textViewRestaurantName == null) {
        break missingId;
      }

      id = R.id.textViewRestaurantNameDetails;
      TextView textViewRestaurantNameDetails = ViewBindings.findChildViewById(rootView, id);
      if (textViewRestaurantNameDetails == null) {
        break missingId;
      }

      id = R.id.textViewReviewCount;
      TextView textViewReviewCount = ViewBindings.findChildViewById(rootView, id);
      if (textViewReviewCount == null) {
        break missingId;
      }

      id = R.id.textViewTotalCountReview;
      TextView textViewTotalCountReview = ViewBindings.findChildViewById(rootView, id);
      if (textViewTotalCountReview == null) {
        break missingId;
      }

      id = R.id.textViewViewMoreReview;
      TextView textViewViewMoreReview = ViewBindings.findChildViewById(rootView, id);
      if (textViewViewMoreReview == null) {
        break missingId;
      }

      id = R.id.viewPagerSlideImageRestaurant;
      ViewPager2 viewPagerSlideImageRestaurant = ViewBindings.findChildViewById(rootView, id);
      if (viewPagerSlideImageRestaurant == null) {
        break missingId;
      }

      return new ActivityRestaurantDetailsBinding((LinearLayout) rootView, buttonReserve,
          circleIndicator, imageViewRestaurant, layout1, layout10, layout11, layout12, layout2,
          layout3, layout4, layout5, layout6, layout7, layout8, layout9, layoutAddress, layoutCall,
          layoutCopyShareLink, layoutDirection, layoutFollow, layoutMain, binding_layoutMap,
          layoutRestaurantDetail, layoutShareFacebook, layoutShareMessenger, layoutShareOther,
          layoutTop, line1, line2, nestedScrollView, ratingBar, ratingBarTotalValue,
          recycleViewPostFoodRestaurant, recycleViewReview, recycleViewTimeBookTable, reportRes,
          text1, text11, textRestaurantName, textTitle, textTotalRate, textViewAddress,
          textViewCall, textViewCategory, textViewCategoryRestaurant, textViewChooseAddress,
          textViewChooseDate, textViewChooseDistance, textViewChoosePersonNumber, textViewClose,
          textViewCountBookTable, textViewCountBookTableTextAfter, textViewCountBookTableTextBefore,
          textViewDirections, textViewDistance, textViewFollow, textViewImageLogoRestaurant,
          textViewPromotion, textViewPromotionForm, textViewRatingValue, textViewReadMore,
          textViewReadMoreRestaurantsText, textViewRestaurantDetail, textViewRestaurantDetails,
          textViewRestaurantName, textViewRestaurantNameDetails, textViewReviewCount,
          textViewTotalCountReview, textViewViewMoreReview, viewPagerSlideImageRestaurant);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
