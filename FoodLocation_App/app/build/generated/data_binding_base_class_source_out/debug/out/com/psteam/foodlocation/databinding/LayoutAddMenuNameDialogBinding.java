// Generated by view binder compiler. Do not edit!
package com.psteam.foodlocation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.psteam.foodlocation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutAddMenuNameDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonAddMenu;

  @NonNull
  public final MaterialButton buttonBack;

  @NonNull
  public final EditText inputMenuName;

  @NonNull
  public final TextView text1;

  private LayoutAddMenuNameDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonAddMenu, @NonNull MaterialButton buttonBack,
      @NonNull EditText inputMenuName, @NonNull TextView text1) {
    this.rootView = rootView;
    this.buttonAddMenu = buttonAddMenu;
    this.buttonBack = buttonBack;
    this.inputMenuName = inputMenuName;
    this.text1 = text1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutAddMenuNameDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutAddMenuNameDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_add_menu_name_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutAddMenuNameDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddMenu;
      MaterialButton buttonAddMenu = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddMenu == null) {
        break missingId;
      }

      id = R.id.buttonBack;
      MaterialButton buttonBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.inputMenuName;
      EditText inputMenuName = ViewBindings.findChildViewById(rootView, id);
      if (inputMenuName == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      return new LayoutAddMenuNameDialogBinding((ConstraintLayout) rootView, buttonAddMenu,
          buttonBack, inputMenuName, text1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
