// Generated by view binder compiler. Do not edit!
package com.psteam.foodlocation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.makeramen.roundedimageview.RoundedImageView;
import com.psteam.foodlocation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RestaurantItemContainerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RoundedImageView imageViewRestaurant;

  @NonNull
  public final LinearLayout layout3;

  @NonNull
  public final TextView text1;

  @NonNull
  public final TextView textViewPoint;

  @NonNull
  public final TextView textViewRating;

  @NonNull
  public final TextView textViewRestaurantAddress;

  @NonNull
  public final TextView textViewRestaurantName;

  @NonNull
  public final TextView textViewStatusRestaurant;

  @NonNull
  public final TextView textviewDistance;

  private RestaurantItemContainerBinding(@NonNull ConstraintLayout rootView,
      @NonNull RoundedImageView imageViewRestaurant, @NonNull LinearLayout layout3,
      @NonNull TextView text1, @NonNull TextView textViewPoint, @NonNull TextView textViewRating,
      @NonNull TextView textViewRestaurantAddress, @NonNull TextView textViewRestaurantName,
      @NonNull TextView textViewStatusRestaurant, @NonNull TextView textviewDistance) {
    this.rootView = rootView;
    this.imageViewRestaurant = imageViewRestaurant;
    this.layout3 = layout3;
    this.text1 = text1;
    this.textViewPoint = textViewPoint;
    this.textViewRating = textViewRating;
    this.textViewRestaurantAddress = textViewRestaurantAddress;
    this.textViewRestaurantName = textViewRestaurantName;
    this.textViewStatusRestaurant = textViewStatusRestaurant;
    this.textviewDistance = textviewDistance;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RestaurantItemContainerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RestaurantItemContainerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.restaurant_item_container, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RestaurantItemContainerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageViewRestaurant;
      RoundedImageView imageViewRestaurant = ViewBindings.findChildViewById(rootView, id);
      if (imageViewRestaurant == null) {
        break missingId;
      }

      id = R.id.layout3;
      LinearLayout layout3 = ViewBindings.findChildViewById(rootView, id);
      if (layout3 == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.textViewPoint;
      TextView textViewPoint = ViewBindings.findChildViewById(rootView, id);
      if (textViewPoint == null) {
        break missingId;
      }

      id = R.id.textViewRating;
      TextView textViewRating = ViewBindings.findChildViewById(rootView, id);
      if (textViewRating == null) {
        break missingId;
      }

      id = R.id.textViewRestaurantAddress;
      TextView textViewRestaurantAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewRestaurantAddress == null) {
        break missingId;
      }

      id = R.id.textViewRestaurantName;
      TextView textViewRestaurantName = ViewBindings.findChildViewById(rootView, id);
      if (textViewRestaurantName == null) {
        break missingId;
      }

      id = R.id.textViewStatusRestaurant;
      TextView textViewStatusRestaurant = ViewBindings.findChildViewById(rootView, id);
      if (textViewStatusRestaurant == null) {
        break missingId;
      }

      id = R.id.textviewDistance;
      TextView textviewDistance = ViewBindings.findChildViewById(rootView, id);
      if (textviewDistance == null) {
        break missingId;
      }

      return new RestaurantItemContainerBinding((ConstraintLayout) rootView, imageViewRestaurant,
          layout3, text1, textViewPoint, textViewRating, textViewRestaurantAddress,
          textViewRestaurantName, textViewStatusRestaurant, textviewDistance);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
