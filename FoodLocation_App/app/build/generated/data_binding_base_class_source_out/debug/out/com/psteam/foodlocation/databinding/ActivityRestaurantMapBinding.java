// Generated by view binder compiler. Do not edit!
package com.psteam.foodlocation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.psteam.foodlocation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRestaurantMapBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton buttonDirection;

  @NonNull
  public final ImageView imageViewClose;

  @NonNull
  public final ConstraintLayout layoutTop;

  @NonNull
  public final TextView text11;

  private ActivityRestaurantMapBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton buttonDirection, @NonNull ImageView imageViewClose,
      @NonNull ConstraintLayout layoutTop, @NonNull TextView text11) {
    this.rootView = rootView;
    this.buttonDirection = buttonDirection;
    this.imageViewClose = imageViewClose;
    this.layoutTop = layoutTop;
    this.text11 = text11;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRestaurantMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRestaurantMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_restaurant_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRestaurantMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDirection;
      MaterialButton buttonDirection = ViewBindings.findChildViewById(rootView, id);
      if (buttonDirection == null) {
        break missingId;
      }

      id = R.id.imageViewClose;
      ImageView imageViewClose = ViewBindings.findChildViewById(rootView, id);
      if (imageViewClose == null) {
        break missingId;
      }

      id = R.id.layoutTop;
      ConstraintLayout layoutTop = ViewBindings.findChildViewById(rootView, id);
      if (layoutTop == null) {
        break missingId;
      }

      id = R.id.text11;
      TextView text11 = ViewBindings.findChildViewById(rootView, id);
      if (text11 == null) {
        break missingId;
      }

      return new ActivityRestaurantMapBinding((CoordinatorLayout) rootView, buttonDirection,
          imageViewClose, layoutTop, text11);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
